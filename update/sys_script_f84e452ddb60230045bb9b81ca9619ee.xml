<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_58872_needit_needit</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_58872_needit_needit">u_requested_forISNOTEMPTY^active=true^EQ<item endquery="false" field="u_requested_for" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="false" field="active" goto="false" newquery="false" operator="=" or="false" value="true"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>NeedIt When needed field date</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {

	// rightnow stores the current time
	//var rightnow = new GlideDateTime();
	// Create a GlideDateTime object for the When needed date
	//var whenNeeded = new GlideDateTime(current.u_when_needed);
	
	// Instantiate the NeedItUtils class.  Call the isDatePast method and pass 
	// the u_when_needed value.
	var niutils = new NeedItUtils();
	
	// If the isDatePast method returns true, the date is in the past.


	var isToday = niutils.isDateToday(current.u_when_needed);
	// if the isDateToday method returns true the When needed date is today 
	if(isToday == true){
		gs.addErrorMessage("You cannot submit NeedIt requests for today.");
		current.setAbortAction(true);
	} 
	else {
		var isPast = niutils.isDatePast(current.u_when_needed);

		if(isPast == true){
			gs.addErrorMessage("When needed date cannot be in the past.  Your request has not been saved to the database.");
			current.setAbortAction(true);
		}		
		
	}
	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2018-09-14 12:47:24</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f84e452ddb60230045bb9b81ca9619ee</sys_id>
        <sys_mod_count>8</sys_mod_count>
        <sys_name>NeedIt When needed field date</sys_name>
        <sys_overrides/>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_f84e452ddb60230045bb9b81ca9619ee</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2018-09-17 12:17:57</sys_updated_on>
        <template>active=true^EQ</template>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f84e452ddb60230045bb9b81ca9619ee"/>
</record_update>
